name: Build Release Executables

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['3.9']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build executable
      run: |
        pyinstaller --onefile --name=repairpbc --distpath=./dist --clean --noconfirm repair_pbc.py

    - name: Upload executable to release
      uses: actions/upload-release-asset@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/repairpbc${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        asset_name: repairpbc-${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'macos' || 'linux' }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        asset_content_type: ${{ matrix.os == 'windows-latest' && 'application/octet-stream' || 'application/executable' }} 